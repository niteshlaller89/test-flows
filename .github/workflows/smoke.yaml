name: SmokeTests

on:
  workflow_call:
    inputs:
        environment:
          required: true
          type: string
          default: 'qasmoke01'
  workflow_dispatch:
    inputs:
        environment:
          required: true
          type: string
          default: 'qasmoke01'
env:
  ENV: ${{ inputs.environment }}
  ENV_URL: https://${{ inputs.environment }}.edu.barco.cloud
  OWNER: ${{ github.repository_owner }}
  REPO: ${{ github.event.repository.name }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  BRANCH: ${{ github.event_name == 'workflow_dispatch' && github.ref_name || github.head_ref }}

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'workflow_dispatch' && github.ref_name || github.head_ref }}
  cancel-in-progress: true

jobs:
  prepare:
    name: Deploy smoke test env
    runs-on: ubuntu-latest
    outputs:
      status_url: ${{ steps.create_deployment.outputs.status_url }}
    steps:
      - name: Create smoke test deployment
        id: create_deployment
        run: |
          IS_TAG=$(if [ ${#{{ inputs.environment }}} -gt 2 ]; then echo true; else echo false; fi)
          echo $IS_TAG
          status_url="$(gh api --method POST -H "Accept: application/vnd.github+json" \
            /repos/${OWNER}/${REPO}/deployments \
            -f ref=${BRANCH} \
            -F auto_merge=false \
            -f required_contexts[] \
            -f environment=${ENV} \
            -f payload='{ "deploy": "Deploy smoke test environment" }' \
            -f description='Deploy Smoke Test Env' \
            --jq '.statuses_url')"
            echo "status_url=${status_url}"
            echo "status_url=${status_url}" >> $GITHUB_OUTPUT
        shell: bash

  deploy:
    name: Check deployment status
    runs-on: ubuntu-latest
    needs: prepare
    outputs:
        result: ${{ steps.start_deployment.outputs.result }}
    steps:
      - id: start_deployment
        run: |
            echo Sha to deploy: ${GITHUB_SHA} ${{github.event.pull_request.head.sha}}

            gh api \
              --method POST \
              -H "Accept: application/vnd.github+json" \
              ${{needs.prepare.outputs.status_url}} \
              -f environment=$ENV \
              -f state='in_progress'

            sleep 5
            echo "result=success" >> $GITHUB_OUTPUT
        shell: bash

  check:
    name: Set deployment status
    runs-on: ubuntu-latest
    needs: [prepare, deploy]
    if: ${{ always() }}
    steps:
      - run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            ${{needs.prepare.outputs.status_url}} \
            -f environment=${ENV} \
            -f state=${STATE} \
            -f log_url=`https://github.com/${OWNER}/${REPO}/actions/runs/${{github.run_id}}` \
            -f description='Deployment completed.' \
            -f target_url=${ENV_URL}
        env:
          STATE: "${{ needs.deploy.outputs.result == 'success' && 'success' || 'error' }}"
        shell: bash

  run-playwright-tests:
    name: Run playwright tests
    needs: [check]
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
        working-directory: tests/smoke # only for bash
    steps:
    - name: Check out repository
      uses: actions/checkout@v3
    - name: Change dir
      working-directory: tests/smoke
      shell: bash
      run: |
        pwd
  
    - name: Set up node
      working-directory: tests/smoke
      shell: bash
      run: |
        echo 'Set up node'
        pwd
        echo $GITHUB_ACTION_PATH

    - name: Install dependencies
      shell: bash
      run: |
        echo 'Install dependencies'
        pwd
        echo $GITHUB_ACTION_PATH

    - name: Install playwright browsers
      shell: bash
      run: echo 'Install playwright browsers'

    - name: Run tests
      shell: bash
      run: |
        echo 'Run tests'